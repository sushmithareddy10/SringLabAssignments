package com.cg.trainee.controllerImpl;


import java.util.List;
import java.util.Optional;

import javax.naming.Binding;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.jpa.repository.Modifying;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;


import com.cg.trainee.model.Trainee;
import com.cg.trainee.serviceImpl.MapValidationErrorService;
import com.cg.trainee.serviceImpl.TraineeServiceImpl;

@RestController
@RequestMapping("/api/trainees")
public class TraineeControllerImpl{
	@Autowired
	private TraineeServiceImpl traineeService;
	
	@Autowired
	private MapValidationErrorService mapValidationErrorService;

	
	@PostMapping("")
	public ResponseEntity<?> insert(@Valid @RequestBody Trainee trainee, BindingResult result) {
		ResponseEntity<?> errorMap = mapValidationErrorService.MapValidationError(result);
		if(errorMap!=null) {
			traineeService.insert(trainee);
		}
		return new ResponseEntity<Map<String,String>>(status)
	}
	
	@GetMapping("/{traineeId}")
	public ResponseEntity<?> findById(@PathVariable int traineeId) {
		 Trainee trainee = traineeService.finById(traineeId);
		return new ResponseEntity<Trainee>(trainee, HttpStatus.OK);
	}
	
	@GetMapping("/all")
	public List<Trainee> findAll() {
		return traineeService.findAll();
	}
	
	@RequestMapping(method = RequestMethod.GET)
	public List<Trainee> findByName(@RequestParam(value="name") String traineeName) {
	    return traineeService.findByName(traineeName);
	}
	
	@DeleteMapping("/{traineeId}")
	public void deleteById(@PathVariable int traineeId) {
		traineeService.deleteById(traineeId);
	}
	
	@PatchMapping("/byname/{id}/{name}")
	public void updateByName(@PathVariable(value="id" )int traineeId, @PathVariable(value="name") String traineeName) {
		traineeService.updateByName(traineeId, traineeName);
	}
	
	@PatchMapping("/bydomain/{id}/{name}")
	public void updateByDomain(@PathVariable(value="id") int traineeId , @PathVariable(value="name") String traineeDomain) {
		traineeService.updateByDomain(traineeId, traineeDomain);
	}
	
	@PatchMapping("/bylocation/{id}/{name}")
	public void updateByLocation(@PathVariable(value="id") int traineeId, @PathVariable(value="name") String traineeLocation) {
		traineeService.updateByLocation(traineeId, traineeLocation);
	}
}
